name: HealthTrack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v3
    
    # Configuración inicial
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    #Compilar maven - Se comenta por ser prueba en localhost
    # - name: Compilar Proyecto Maven
    #   run: mvn clean install
    #   working-directory: ./

    # SonarQube (con fe)
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: -Dsonar.projectKey=HealthTrack

    # Pruebas unitarias
    - name: Run tests with coverage
      run: |
        mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent test
        mvn jacoco:report

    # Iniciar Grizzly (puerto 9090)
    - name: Start server
      run: |
        mvn compile exec:java -Dexec.mainClass="com.healthtrack.Main" &
        echo "Waiting for server..."
        timeout 30 bash -c 'while ! curl -s http://localhost:9090/api/peso >/dev/null; do sleep 1; done'

    # Pruebas funcionales con Selenium
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@v1
      
    - name: Run Selenium tests
      run: mvn test -Dtest=HealthTrackFunctionalTest
      env:
        APP_URL: http://localhost:9090

    #Prueba de regresión
    - name: Ejecutar Pruebas UI (Regression Tests)
      run: mvn test -Dgroups=regression -Dselenium.grid.url=http://localhost:4444/wd/hub -Dbrowser.type=chrome
      working-directory: ./

    # Pruebas de carga con JMeter
    - name: Setup JMeter
      run: |
        JMETER_VERSION=5.6.2
        wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-$JMETER_VERSION.tgz
        tar -xzf apache-jmeter-$JMETER_VERSION.tgz
        echo "$PWD/apache-jmeter-$JMETER_VERSION/bin" >> $GITHUB_PATH

    - name: Run JMeter tests
      run: |
        jmeter -n -t src/test/jmeter/HealthTrackTest.jmx -l results.jtl
        grep -q "false" results.jtl && echo "::error::Pruebas JMeter fallidas" && exit 1
        echo "Resultados JMeter:"
        cat results.jtl

    # Reportes
    - name: Subir Reportes de Tests Maven
      uses: actions/upload-artifact@v4
      if: always() 
      with:
        name: surefire-reports
        path: target/surefire-reports

    #TERMINAMOOOOOOOOOOS
    - name: Finalizar Job
      if: always()
      run: |
        echo "Resultado del job: ${{ job.status }}"
        if [ "${{ job.status }}" != "success" ]; then
          echo "::error::Algunas pruebas fallaron"
          exit 1
        fi